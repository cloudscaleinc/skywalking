# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: E2E deployment using CI/CD for SkyWalking

on:
  push:
    branches:
      - Keshav-poc

jobs:
  build-and-save:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 90
    env:
      TAG: ${{ github.sha }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache and Build Docker
      uses: actions/cache@v3
      id: build-cache
      with:
        path: ./dist
        key: ${{ runner.os }}-make-docker-${{ hashFiles('**/*') }}
        restore-keys: |
          ${{ runner.os }}-make-docker-
    
    - name: Run `make docker` to generate distribution tarball
      run: |
        if [ "${{ steps.build-cache.outputs.cache-hit }}" != "true" ]; then
          git submodule init
          git submodule update
          make docker SKIP_TEST=true
        fi


    - name: Ensure the tarball exists before building
      run: ls -l dist/apache-skywalking-apm-bin.tar.gz
    
    - name: Copy tarball to the Docker build context
      run: cp dist/apache-skywalking-apm-bin.tar.gz docker/oap/
    
    - name: Build OAP Docker Image
      run: |
        cd docker/oap
        docker buildx build \
          --file ./Dockerfile \
          --tag cloudscaleinc/skywalking/oap:${{ env.TAG }} \
          --output type=docker,dest=./oap-image.tar
          -- .

    - name: Build UI Docker Image
      run: |
        cd docker/ui
        docker buildx build \
          --file ./Dockerfile \
          --tag cloudscaleinc/skywalking/ui:${{ env.TAG }} \
          --output type=docker,dest=./ui-image.tar
          -- .

    - name: Upload Docker Images as Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: skywalking-docker-images
        path: |
          docker/oap/oap-image.tar
          docker/ui/ui-image.tar

  deploy:
    needs: build-and-save
    runs-on: ubuntu-latest

    steps:
      - name: Download Docker Images Artifacts
        uses: actions/download-artifact@v3
        with:
          name: skywalking-docker-images
          path: ./docker

      - name: SSH into Azure VM and Deploy
        env:
          host: ${{ secrets.VM_IP }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY_BASE64 }}
        run: |
          eval $(ssh-agent -s)
          echo "$key" | base64 --decode | ssh-add -
        
          ssh -vvv -o StrictHostKeyChecking=no -t $username@$host << 'EOF'
            # Pull the latest code
            cd ~/skywalking
            git pull origin Keshav-poc
            git submodule update --init --recursive

            cd ~/skywalking/docker
            docker-compose --profile elasticsearch down
            
            # Load Docker Images from Artifacts
            docker load -i oap-image.tar
            docker load -i ui-image.tar

            # Update Docker Compose to use the loaded images
            export OAP_IMAGE=cloudscaleinc/skywalking/oap:${{ env.TAG }}
            export UI_IMAGE=cloudscaleinc/skywalking/ui:${{ env.TAG }}
            
            docker-compose --profile elasticsearch up -d
            
          EOF
