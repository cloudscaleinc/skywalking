# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI/CD for SkyWalking with Docker Artifacts

on:
  push:
    branches:
      - poc

jobs:
  build-and-push:
    if: github.repository == 'cloudscaleinc/skywalking'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    timeout-minutes: 90
    env:
      TAG: ${{ github.sha }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push Docker Image
      run: |
        docker build -t ghcr.io/${{ github.actor }}/skywalking:${{ github.sha }} .
        docker push ghcr.io/${{ github.actor }}/skywalking:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: SSH into Azure VM and Deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Pull the latest code
            git pull origin main
  
            # Pull the pre-built Docker image from GitHub Container Registry
            docker pull ghcr.io/${{ github.actor }}/skywalking:${{ github.sha }}
  
            # Update Docker Compose to use the pulled image
            sed -i 's|image: .*|image: ghcr.io/${{ github.actor }}/skywalking:${{ github.sha }}|' docker/docker-compose.yml
  
            # Run the updated containers
            cd docker
            docker-compose --profile elasticsearch up -d
